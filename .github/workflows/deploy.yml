name: Deploy Documentation

on:
  push:
    branches: [main]
  workflow_dispatch:
  repository_dispatch:
    types: [docs-update]
  schedule:
    # Run every 6 hours to catch updates from main repo
    - cron: '0 */6 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout docs repository
        uses: actions/checkout@v4
        
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          repository: tafystudio/tafystudio
          path: tafystudio-main
          # No token needed for public repository
          # Remove continue-on-error to ensure we know if checkout fails
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - name: Install dependencies
        run: |
          npm ci
          pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints
      
      - name: Install monorepo dependencies
        run: |
          cd tafystudio-main
          # Install uv for Python dependency management
          pip install uv
          # The extract-docs.sh script will handle other dependencies
          cd ..
      
      - name: Extract documentation from monorepo
        run: |
          cd tafystudio-main
          # Make the script executable (in case permissions aren't preserved)
          chmod +x scripts/extract-docs.sh
          ./scripts/extract-docs.sh ../extracted-docs
          cd ..
          
          # Show what was extracted
          echo "Extracted documentation structure:"
          find extracted-docs -type f -name "*.json" -exec echo {} \; -exec head -5 {} \;
      
      - name: Process extracted documentation
        run: |
          # Create docs directory
          mkdir -p docs
          
          # Copy static content to Docusaurus docs directory
          cp -r extracted-docs/content/* docs/
          
          # Copy API documentation to static directory
          mkdir -p static/api
          if [ -d "extracted-docs/api" ]; then
            cp -r extracted-docs/api/* static/api/
          fi
          
          # Process schemas if available
          if [ -d "extracted-docs/schemas" ]; then
            mkdir -p docs/reference
            cp -r extracted-docs/schemas/* docs/reference/
          fi
          
          # Process examples if available
          if [ -d "extracted-docs/examples" ]; then
            mkdir -p docs/examples
            cp -r extracted-docs/examples/* docs/examples/
          fi
          
          # Show what was copied
          echo "Contents of docs directory:"
          ls -la docs/
          
          # Generate sidebar based on index.json
          if [ -f "extracted-docs/index.json" ]; then
            node scripts/generate-sidebar.js extracted-docs/index.json > sidebars.ts
            echo "Generated sidebars.ts from extracted documentation"
          else
            echo "Warning: No index.json found, using existing sidebars.ts"
          fi
          
          # Create API documentation pages that reference the static API docs
          mkdir -p docs/api
          
          # Create API index
          cat > docs/api/index.md << 'EOF'
          ---
          title: API Reference
          description: Tafy Studio API documentation
          ---

          # API Reference

          Tafy Studio provides APIs in multiple languages for building robotics applications.

          ## Available APIs

          ### [TypeScript/JavaScript API](./typescript)
          The TypeScript SDK for building web interfaces and Node.js applications.

          ### [Python API](./python)
          The Python SDK for building backend services and robotics applications.

          ### [Go API](./go)
          The Go SDK for building high-performance node agents and services.

          ## Getting Started

          Each API provides:
          - Client libraries for NATS messaging
          - HAL (Hardware Abstraction Layer) message types
          - Helper utilities for common robotics tasks

          Choose the API that best fits your use case and development environment.
          EOF
          
          # Generate TypeScript API docs page
          cat > docs/api/typescript.md << 'EOF'
          ---
          title: TypeScript API
          ---

          # TypeScript API Reference

          The TypeScript SDK is available as `@tafystudio/sdk-ts`.

          ## Installation

          ```bash
          npm install @tafystudio/sdk-ts
          ```

          ## Usage

          ```typescript
          import { TafyClient } from '@tafystudio/sdk-ts';

          const client = new TafyClient({
            natsUrl: 'nats://localhost:4222'
          });

          await client.connect();
          ```

          ## API Documentation

          [View the full TypeScript API documentation](/api/typescript/index.html)
          EOF
          
          # Generate Python API docs page
          cat > docs/api/python.md << 'EOF'
          ---
          title: Python API
          ---

          # Python API Reference

          The Python SDK provides comprehensive support for building Tafy Studio applications.

          ## Installation

          ```bash
          pip install tafystudio
          ```

          ## Usage

          ```python
          from tafystudio import TafyClient

          client = TafyClient(nats_url="nats://localhost:4222")
          await client.connect()
          ```

          ## API Documentation

          [View the full Python API documentation](/api/python/index.html)
          EOF
          
          # Go API docs reference
          cat > docs/api/go.md << 'EOF'
          ---
          title: Go API
          ---

          # Go API Reference

          The Go SDK is available as a Go module.

          ## Installation

          ```bash
          go get github.com/tafystudio/tafystudio/packages/sdk-go
          ```

          ## Documentation

          Full API documentation is available at:
          <https://pkg.go.dev/github.com/tafystudio/tafystudio>

          ## Usage

          ```go
          import (
              "github.com/tafystudio/tafystudio/packages/sdk-go/client"
          )

          client, err := client.NewTafyClient("nats://localhost:4222")
          if err != nil {
              log.Fatal(err)
          }
          defer client.Close()
          ```
          EOF
      
      - name: Build documentation
        run: npm run build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4